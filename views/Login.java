/*******************************************************************************
 *                                                                             *
 * Práctica Hotel                                                              *
 * Autor: Valle Guerra, Victor Leonardo                                        *
 * Proyecto: Hotel                                                             *
 * [Major].[Minor].[Revision].[Build]                                          *
 * Versión : 1.0.0.0 (dev_release20210605_build_0)                             *
 * Nombre de Archivo: Login.java                                               *
 * Fecha: 06/Jun/2021                                                          *
 * Materia: Seminario de solución de Problemas de Estructura de Datos II       *
 * NRC: 138619                                                                 *      
 * CVE: I5889                                                                  *
 * Sección: D21                                                                *
 * Profesor: Lupercio Coronel, Ramiro                                          *
 * Centro Universitario de Ciencias Exactas e Ingenierías                      *
 *                                                                             *
 ******************************************************************************/

// Paquete donde se incluye dicho archivo
package views;
// Librerías a importar
import controllers.Hashing;
import java.awt.Color;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import models.Ventana;
import models.Registro;
import models.Usuario;

// Parámetros que indican autor(es) de programa
/**
 * @author Valle Guerra, Victor Leonardo 
 */

// Clase pública login que se extiende desde javax.swing.JFrame
public class Login extends javax.swing.JFrame 
{

    /**
     * Parámetros a usar en clase
     * @param TamanoVentanaAAsignar
     * @param Registros
     */
    // |------------------------Atributos privados-----------------------------|
    private Ventana TamanoVentana;
    private Registro RegistrosVentana;
    private String ContrasenaTemp;
    private Boolean MostrandoContrasena;
    
    // |------------------------Métodos privados-------------------------------|
    
    // |------------------------Atributos públicos-----------------------------|
    
    // |------------------------Métodos públicos-------------------------------|
    
    /**
     * Constructor de clase que inicia ventana
     */
    public Login(Ventana TamanoVentanaAAsignar, Registro Registros) 
    {
        // Inicialización de componentes
        initComponents();
        // Pasar argumentos de constructor a atributos
        TamanoVentana = TamanoVentanaAAsignar;
        RegistrosVentana = Registros;
        MostrandoContrasena = false;
        // Colar imagen de icono de programa
        ImageIcon Icono = new ImageIcon(getClass().getResource(
            "/content/images/logo/CARS-Logo-IcosahedronTransparenteSinTexto.png"));
        setIconImage(Icono.getImage());
        // Pasa tamaño de ventana
        setSize((int) TamanoVentana.getAncho(), (int) TamanoVentana.getAltura());
        // Coloca al centro de la pantalla la ventana
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelFondo = new javax.swing.JPanel();
        BotonMinimizar = new javax.swing.JButton();
        BotonMaximizar = new javax.swing.JButton();
        BotonCerrar = new javax.swing.JButton();
        ImagenUsuario = new javax.swing.JLabel();
        CampoUsuario = new javax.swing.JTextField();
        CampoContrasena = new javax.swing.JTextField();
        ImagenUsername = new javax.swing.JLabel();
        ImagenContrasena = new javax.swing.JLabel();
        BotonReestablecerContrasena = new javax.swing.JButton();
        BotonCrearCuenta = new javax.swing.JButton();
        ImagenLogo = new javax.swing.JLabel();
        BotonInfo = new javax.swing.JButton();
        BotonMostrarContrasena = new javax.swing.JButton();
        SeparadorContrasena = new javax.swing.JSeparator();
        SeparadorUsuario = new javax.swing.JSeparator();
        BotonIniciarSesion = new javax.swing.JButton();
        BotonReestablecer = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Inicio de sesión");
        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(420, 600));
        setMinimumSize(new java.awt.Dimension(420, 600));
        setPreferredSize(new java.awt.Dimension(420, 600));
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridLayout(1, 1));

        PanelFondo.setBackground(new java.awt.Color(255, 255, 255));
        PanelFondo.setMaximumSize(new java.awt.Dimension(420, 640));
        PanelFondo.setMinimumSize(new java.awt.Dimension(420, 640));

        BotonMinimizar.setBackground(new java.awt.Color(255, 255, 255));
        BotonMinimizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/content/images/options/BotonMinimizarNormal-MistyBlue-24x24.png"))); // NOI18N
        BotonMinimizar.setToolTipText("<html><p><strong>Minimizar ventana</strong></p></html>");
        BotonMinimizar.setBorder(null);
        BotonMinimizar.setBorderPainted(false);
        BotonMinimizar.setContentAreaFilled(false);
        BotonMinimizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BotonMinimizar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonMinimizar.setNextFocusableComponent(BotonMaximizar);
        BotonMinimizar.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/content/images/options/BotonMinimizarClicked-MistyBlue-24x24.png"))); // NOI18N
        BotonMinimizar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/content/images/options/BotonMinimizarOver-MistyBlue-24x24.png"))); // NOI18N
        BotonMinimizar.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/content/images/options/BotonMinimizarOver-MistyBlue-24x24.png"))); // NOI18N
        BotonMinimizar.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/content/images/options/BotonMinimizarOver-MistyBlue-24x24.png"))); // NOI18N
        BotonMinimizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonMinimizarActionPerformed(evt);
            }
        });

        BotonMaximizar.setBackground(new java.awt.Color(255, 255, 255));
        BotonMaximizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/content/images/options/BotonMaximizarNormal-MistyBlue-24x24.png"))); // NOI18N
        BotonMaximizar.setToolTipText("<html><p><strong>Maximizar ventana</strong></p></html>");
        BotonMaximizar.setBorder(null);
        BotonMaximizar.setBorderPainted(false);
        BotonMaximizar.setContentAreaFilled(false);
        BotonMaximizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BotonMaximizar.setFocusPainted(false);
        BotonMaximizar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonMaximizar.setNextFocusableComponent(BotonCerrar);
        BotonMaximizar.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/content/images/options/BotonMaximizarClicked-MistyBlue-24x24.png"))); // NOI18N
        BotonMaximizar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/content/images/options/BotonMaximizarOver-MistyBlue-24x24.png"))); // NOI18N
        BotonMaximizar.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/content/images/options/BotonMaximizarOver-MistyBlue-24x24.png"))); // NOI18N
        BotonMaximizar.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/content/images/options/BotonMaximizarOver-MistyBlue-24x24.png"))); // NOI18N
        BotonMaximizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonMaximizarActionPerformed(evt);
            }
        });

        BotonCerrar.setBackground(new java.awt.Color(255, 255, 255));
        BotonCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/content/images/options/BotonCerrarNormal-MistyBlue-24x24.png"))); // NOI18N
        BotonCerrar.setToolTipText("<html><p><strong>Cerrar ventana</strong></p></html>");
        BotonCerrar.setBorder(null);
        BotonCerrar.setBorderPainted(false);
        BotonCerrar.setContentAreaFilled(false);
        BotonCerrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BotonCerrar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonCerrar.setNextFocusableComponent(CampoUsuario);
        BotonCerrar.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/content/images/options/BotonCerrarClicked-MistyBlue-24x24.png"))); // NOI18N
        BotonCerrar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/content/images/options/BotonCerrarOver-MistyBlue-24x24.png"))); // NOI18N
        BotonCerrar.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/content/images/options/BotonCerrarOver-MistyBlue-24x24.png"))); // NOI18N
        BotonCerrar.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/content/images/options/BotonCerrarOver-MistyBlue-24x24.png"))); // NOI18N
        BotonCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonCerrarActionPerformed(evt);
            }
        });

        ImagenUsuario.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ImagenUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/content/images/login/Usuario-BelizeHole-100x100.png"))); // NOI18N
        ImagenUsuario.setText("Iniciar Sesión");
        ImagenUsuario.setToolTipText("<html><p><strong>Iniciar sesión</p></strong></html>");
        ImagenUsuario.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ImagenUsuario.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        CampoUsuario.setForeground(new java.awt.Color(102, 102, 102));
        CampoUsuario.setText("Nombre de Usuario");
        CampoUsuario.setToolTipText("<html><p><strong>Ingrese nombre de usuario</strong></p></html>");
        CampoUsuario.setBorder(null);
        CampoUsuario.setNextFocusableComponent(CampoContrasena);
        CampoUsuario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                CampoUsuarioFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                CampoUsuarioFocusLost(evt);
            }
        });
        CampoUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                CampoUsuarioMousePressed(evt);
            }
        });
        CampoUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CampoUsuarioActionPerformed(evt);
            }
        });

        CampoContrasena.setForeground(new java.awt.Color(102, 102, 102));
        CampoContrasena.setText("Contraseña");
        CampoContrasena.setToolTipText("<html><p><strong>Ingrese contraseña</strong></p></html>");
        CampoContrasena.setBorder(null);
        CampoContrasena.setNextFocusableComponent(BotonMostrarContrasena);
        CampoContrasena.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                CampoContrasenaCaretUpdate(evt);
            }
        });
        CampoContrasena.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                CampoContrasenaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                CampoContrasenaFocusLost(evt);
            }
        });
        CampoContrasena.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                CampoContrasenaMousePressed(evt);
            }
        });
        CampoContrasena.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CampoContrasenaActionPerformed(evt);
            }
        });
        CampoContrasena.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CampoContrasenaKeyTyped(evt);
            }
        });

        ImagenUsername.setBackground(new java.awt.Color(255, 255, 255));
        ImagenUsername.setIcon(new javax.swing.ImageIcon(getClass().getResource("/content/images/login/UsuarioTextField-BelizeHole-24x24.png"))); // NOI18N
        ImagenUsername.setToolTipText("<html><p><strong>Ingrese nombre de usuario</strong></p></html>");

        ImagenContrasena.setBackground(new java.awt.Color(255, 255, 255));
        ImagenContrasena.setIcon(new javax.swing.ImageIcon(getClass().getResource("/content/images/login/ContrasenaTextField-BelizeHole-24x24.png"))); // NOI18N
        ImagenContrasena.setToolTipText("<html><p><strong>Ingrese nombre de usuario</strong></p></html>");

        BotonReestablecerContrasena.setBackground(new java.awt.Color(255, 255, 255));
        BotonReestablecerContrasena.setText("¿No recuerdas tu contraseña?");
        BotonReestablecerContrasena.setToolTipText("<html><p><strong>¿No recuerdas tu contraseña?</strong></p></html>");
        BotonReestablecerContrasena.setBorder(null);
        BotonReestablecerContrasena.setBorderPainted(false);
        BotonReestablecerContrasena.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BotonReestablecerContrasena.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonReestablecerContrasenaActionPerformed(evt);
            }
        });

        BotonCrearCuenta.setBackground(new java.awt.Color(255, 255, 255));
        BotonCrearCuenta.setText("¿Aún no tienes cuenta?");
        BotonCrearCuenta.setToolTipText("<html><p><strong>¿No recuerdas tu contraseña?</strong></p></html>");
        BotonCrearCuenta.setBorder(null);
        BotonCrearCuenta.setBorderPainted(false);
        BotonCrearCuenta.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BotonCrearCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonCrearCuentaActionPerformed(evt);
            }
        });

        ImagenLogo.setBackground(new java.awt.Color(255, 255, 255));
        ImagenLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/content/images/logo/CARS-Logo2.png"))); // NOI18N
        ImagenLogo.setToolTipText("<html><p><strong>Car Automated Repair System</strong></p></html>");

        BotonInfo.setBackground(new java.awt.Color(255, 255, 255));
        BotonInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/content/images/options/BotonInfoNormal-MistyBlue-24x24.png"))); // NOI18N
        BotonInfo.setToolTipText("<html><p><strong>Información acerca del programa</strong></p></html>");
        BotonInfo.setBorder(null);
        BotonInfo.setBorderPainted(false);
        BotonInfo.setContentAreaFilled(false);
        BotonInfo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BotonInfo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonInfo.setNextFocusableComponent(BotonMinimizar);
        BotonInfo.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/content/images/options/BotonInfoClicked-MistyBlue-24x24.png"))); // NOI18N
        BotonInfo.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/content/images/options/BotonInfoOver-MistyBlue-24x24.png"))); // NOI18N
        BotonInfo.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/content/images/options/BotonInfoOver-MistyBlue-24x24.png"))); // NOI18N
        BotonInfo.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/content/images/options/BotonInfoOver-MistyBlue-24x24.png"))); // NOI18N
        BotonInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonInfoActionPerformed(evt);
            }
        });

        BotonMostrarContrasena.setBackground(new java.awt.Color(255, 255, 255));
        BotonMostrarContrasena.setIcon(new javax.swing.ImageIcon(getClass().getResource("/content/images/login/MostrarContrasenaTextField-BelizeHole-24x24.png"))); // NOI18N
        BotonMostrarContrasena.setToolTipText("<html><p><strong>Mostrar contraseña</strong></p></html>");
        BotonMostrarContrasena.setBorder(null);
        BotonMostrarContrasena.setBorderPainted(false);
        BotonMostrarContrasena.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BotonMostrarContrasena.setFocusPainted(false);
        BotonMostrarContrasena.setNextFocusableComponent(BotonReestablecerContrasena);
        BotonMostrarContrasena.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/content/images/login/MostrarContrasenaTextFieldClicked-BelizHole-24x24.png"))); // NOI18N
        BotonMostrarContrasena.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/content/images/login/MostrarContrasenaTextFieldOver-BelizHole-24x24.png"))); // NOI18N
        BotonMostrarContrasena.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/content/images/login/MostrarContrasenaTextFieldOver-BelizHole-24x24.png"))); // NOI18N
        BotonMostrarContrasena.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/content/images/login/MostrarContrasenaTextFieldOver-BelizHole-24x24.png"))); // NOI18N
        BotonMostrarContrasena.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonMostrarContrasenaActionPerformed(evt);
            }
        });

        SeparadorContrasena.setForeground(new java.awt.Color(51, 51, 51));
        SeparadorContrasena.setMinimumSize(new java.awt.Dimension(50, 15));
        SeparadorContrasena.setPreferredSize(new java.awt.Dimension(50, 15));

        SeparadorUsuario.setForeground(new java.awt.Color(51, 51, 51));
        SeparadorUsuario.setMinimumSize(new java.awt.Dimension(50, 15));
        SeparadorUsuario.setPreferredSize(new java.awt.Dimension(50, 15));

        BotonIniciarSesion.setBackground(new java.awt.Color(41, 128, 185));
        BotonIniciarSesion.setForeground(new java.awt.Color(255, 255, 255));
        BotonIniciarSesion.setText("Iniciar Sesión");
        BotonIniciarSesion.setToolTipText("<html><p><strong>Iniciar sesión</strong></p></hmtl>");
        BotonIniciarSesion.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        BotonIniciarSesion.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BotonIniciarSesion.setFocusPainted(false);
        BotonIniciarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonIniciarSesionActionPerformed(evt);
            }
        });

        BotonReestablecer.setBackground(new java.awt.Color(41, 128, 185));
        BotonReestablecer.setForeground(new java.awt.Color(255, 255, 255));
        BotonReestablecer.setText("Reestablecer");
        BotonReestablecer.setToolTipText("<html><p><strong>Iniciar sesión</strong></p></hmtl>");
        BotonReestablecer.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        BotonReestablecer.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BotonReestablecer.setFocusPainted(false);
        BotonReestablecer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonReestablecerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelFondoLayout = new javax.swing.GroupLayout(PanelFondo);
        PanelFondo.setLayout(PanelFondoLayout);
        PanelFondoLayout.setHorizontalGroup(
            PanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelFondoLayout.createSequentialGroup()
                .addGroup(PanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelFondoLayout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(ImagenLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelFondoLayout.createSequentialGroup()
                        .addGap(178, 178, 178)
                        .addComponent(ImagenUsuario)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(PanelFondoLayout.createSequentialGroup()
                .addGroup(PanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelFondoLayout.createSequentialGroup()
                        .addGroup(PanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelFondoLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(BotonInfo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(PanelFondoLayout.createSequentialGroup()
                                .addGroup(PanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(PanelFondoLayout.createSequentialGroup()
                                        .addGap(138, 138, 138)
                                        .addGroup(PanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(PanelFondoLayout.createSequentialGroup()
                                                .addComponent(BotonIniciarSesion, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(BotonReestablecer, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(PanelFondoLayout.createSequentialGroup()
                                                .addGroup(PanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(PanelFondoLayout.createSequentialGroup()
                                                        .addGroup(PanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                            .addComponent(SeparadorContrasena, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                            .addComponent(SeparadorUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                        .addGap(12, 12, 12))
                                                    .addComponent(CampoContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addComponent(BotonMostrarContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(PanelFondoLayout.createSequentialGroup()
                                        .addGap(110, 110, 110)
                                        .addGroup(PanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(ImagenContrasena)
                                            .addGroup(PanelFondoLayout.createSequentialGroup()
                                                .addComponent(ImagenUsername)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(CampoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(PanelFondoLayout.createSequentialGroup()
                                        .addGap(167, 167, 167)
                                        .addComponent(BotonCrearCuenta)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addComponent(BotonMinimizar, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BotonMaximizar, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BotonCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelFondoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(BotonReestablecerContrasena, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        PanelFondoLayout.setVerticalGroup(
            PanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelFondoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(PanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(BotonMaximizar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(BotonMinimizar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(BotonCerrar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(BotonInfo))
                .addGap(19, 19, 19)
                .addComponent(ImagenLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(ImagenUsuario)
                .addGap(29, 29, 29)
                .addGroup(PanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(CampoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ImagenUsername))
                .addGap(6, 6, 6)
                .addComponent(SeparadorUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(PanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelFondoLayout.createSequentialGroup()
                        .addGroup(PanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ImagenContrasena)
                            .addComponent(CampoContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SeparadorContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BotonIniciarSesion, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BotonReestablecer, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(PanelFondoLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(BotonMostrarContrasena)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonReestablecerContrasena)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BotonCrearCuenta)
                .addContainerGap(168, Short.MAX_VALUE))
        );

        getContentPane().add(PanelFondo);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    // Método privado para Maximizar ventana
    private void BotonMaximizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonMaximizarActionPerformed
        // Maximiza o reduce la ventana al dar click en dicho botón
        // Verifica si está maximizada la ventana
        if(!TamanoVentana.getMaximizada()){
            System.out.println("Maximizando ventana " + getTitle());
            // Reinicia ubicación al esquina superior derecha
            setLocation(0,0);
            // Define como tamaño el maximo de la resolución de la pantalla
            setSize((int)TamanoVentana.getMaxAncho(),(int)TamanoVentana.getMaxAltura());
            // Establece que está maximizada
            TamanoVentana.setMaximizada(true);
            // Setea nuevo tooltip
            this.BotonMaximizar.setToolTipText("<html><p><strong>"+
            "Minimizar tamaño de ventana</strong>" +
            "</p></html>");
        }else{
            System.out.println("Reduciendo la ventana a 720x480");
            // Reduce tamaño de ventana a 480,600
            setSize(480, 600);
            // Indica que ya no está maximizada
            TamanoVentana.setMaximizada(false);
            // Recoloca ventana al centro de la pantalla
            setLocationRelativeTo(null);
            // Setea nuevo tooltip
            this.BotonMaximizar.setToolTipText("<html><p><strong>"+
            "Maximizar ventana</strong></p></html>");
        }
    }//GEN-LAST:event_BotonMaximizarActionPerformed

    private void CampoUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CampoUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CampoUsuarioActionPerformed

    private void CampoContrasenaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CampoContrasenaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CampoContrasenaActionPerformed

    // Método privado de BotonInfo
    private void BotonInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonInfoActionPerformed
        // Mostrar modal de información
        Info InfoVentana = new Info(this, true, TamanoVentana, RegistrosVentana);
        //InfoVentana.getContentPane().add(panel);
        InfoVentana.pack();
        InfoVentana.setLocationRelativeTo(null);
        InfoVentana.setVisible(true);
    }//GEN-LAST:event_BotonInfoActionPerformed

    // Método para cuando se hace click en BotonMostrarContrasena
    private void BotonMostrarContrasenaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonMostrarContrasenaActionPerformed
        if(MostrandoContrasena)
        {
            CampoContrasenaCubrirContrasena();
            MostrandoContrasena = false;
        }
        else
        {
            this.CampoContrasena.setText(ContrasenaTemp);
            MostrandoContrasena = true;
        }
    }//GEN-LAST:event_BotonMostrarContrasenaActionPerformed

    // Método privado para cerrar ventana
    private void BotonCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonCerrarActionPerformed
        // Cierra ventana cuando es clickeado el botón de cerrar ventana
        System.out.println("Saliendo de ventana " + getTitle());
        System.exit(0);
    }//GEN-LAST:event_BotonCerrarActionPerformed

    // Método privado para minimizar ventana
    private void BotonMinimizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonMinimizarActionPerformed
        // Minimiza la ventana al dar click en dicho botón
        System.out.println("Minimizando ventana " + getTitle());
        setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_BotonMinimizarActionPerformed

    // Método privado para BotonReestablecerContrasena
    private void BotonReestablecerContrasenaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonReestablecerContrasenaActionPerformed
        // Mostrar modal de ReestablecerContrasena
        ReestablecerContrasena ReestablecerContrasenaVentana;
        ReestablecerContrasenaVentana = new ReestablecerContrasena(this, true, 
                TamanoVentana, RegistrosVentana);
        //ReestablecerContrasenaVentana.getContentPane().add(panel);
        ReestablecerContrasenaVentana.pack();
        ReestablecerContrasenaVentana.setLocationRelativeTo(null);
        ReestablecerContrasenaVentana.setVisible(true);
    }//GEN-LAST:event_BotonReestablecerContrasenaActionPerformed

    // Método para cuando se hace click en BotonReestablecer
    private void BotonReestablecerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonReestablecerActionPerformed
        // Color para indicar que aún no se ha llenado
        Color ColorNoEscrito = new Color(102, 102, 102);
        // Elimina o setea a predeterminado todos los contenidos de ambos campos
        this.CampoUsuario.setText("Nombre de Usuario");
        this.CampoContrasena.setText("Contraseña");
        // Asigna color predeterminado
        this.CampoUsuario.setForeground(ColorNoEscrito);
        this.CampoContrasena.setForeground(ColorNoEscrito);
        ContrasenaTemp = "";
    }//GEN-LAST:event_BotonReestablecerActionPerformed

    // Método para cuando se hace click en BotonCrearCuenta
    private void BotonCrearCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonCrearCuentaActionPerformed
        // Mostrar modal de CrearCuenta
        CrearCuenta CrearCuentaVentana;
        CrearCuentaVentana = new CrearCuenta(this, true, 
                TamanoVentana, RegistrosVentana);
        //CrearCuentaVentana.getContentPane().add(panel);
        CrearCuentaVentana.pack();
        CrearCuentaVentana.setLocationRelativeTo(null);
        CrearCuentaVentana.setVisible(true);
        dispose();
    }//GEN-LAST:event_BotonCrearCuentaActionPerformed
    
    // Método cuandos presiona el mouse en CampoUsuario
    private void CampoUsuarioMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CampoUsuarioMousePressed
        // Obtener contenido
        String Contenido = this.CampoUsuario.getText();
        Color ColorActual = this.CampoUsuario.getForeground();
        Color ColorEscrito = new Color(51, 51, 51);
        // Verifica si no tiene nada seteado aún
        if(Contenido.equals("Nombre de Usuario"))
        {
            // Elimina contenido
            this.CampoUsuario.setText("");
        }
        if(ColorActual != ColorEscrito)
        {
            this.CampoUsuario.setForeground(ColorEscrito);
        }
    }//GEN-LAST:event_CampoUsuarioMousePressed

    // Método para cuando se enfoca en CampoUsuario
    private void CampoUsuarioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CampoUsuarioFocusGained
        // Obtiene contenido de campo
        String Contenido = this.CampoUsuario.getText();
        // Obtiene color de campo
        Color ColorActual = this.CampoUsuario.getForeground();
        // Color cuando no se ha escrito nada
        Color ColorNoEscrito = new Color(102, 102, 102);
        // Color cuando se va a escribir algo
        Color ColorEscribir = new Color(51, 51, 51);
        // Verifica contenido y color de campo son los predeterminados
        if(Contenido.equals("Nombre de Usuario") && 
                (ColorActual == ColorNoEscrito))
        {
            // Limpiamos contenido
            this.CampoUsuario.setText("");
            this.CampoUsuario.setForeground(ColorEscribir);
        }
        else
        {
            this.CampoUsuario.setForeground(ColorEscribir);
        }
    }//GEN-LAST:event_CampoUsuarioFocusGained

    // Método para cuando se desenfoca de CampoUsuario
    private void CampoUsuarioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CampoUsuarioFocusLost
        // Obtiene contenido de campo
        String Contenido = this.CampoUsuario.getText();
        // Obtiene color de campo
        Color ColorActual = this.CampoUsuario.getForeground();
        // Color cuando no se ha escrito nada
        Color ColorNoEscrito = new Color(102, 102, 102);
        // Color cuando se va a escribir algo
        Color ColorEscribir = new Color(51, 51, 51);
        // Verifica contenido y color de campo son los predeterminados
        if(!Contenido.equals("Nombre de Usuario"))
        {  
            if(Contenido.equals(""))
            {
                this.CampoUsuario.setText("Nombre de Usuario");
                if(ColorActual != ColorNoEscrito)
                {
                    this.CampoUsuario.setForeground(ColorNoEscrito);
                }
            }
        }
    }//GEN-LAST:event_CampoUsuarioFocusLost

    // Método cuando se presiona con el mouse CampoContrasena
    private void CampoContrasenaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CampoContrasenaMousePressed
        // Obtener contenido
        String Contenido = this.CampoContrasena.getText();
        Color ColorActual = this.CampoContrasena.getForeground();
        Color ColorEscrito = new Color(51, 51, 51);
        // Verifica si no tiene nada seteado aún
        if(Contenido.equals("Contraseña"))
        {
            // Elimina contenido
            this.CampoContrasena.setText("");
        }
        if(ColorActual != ColorEscrito)
        {
            this.CampoContrasena.setForeground(ColorEscrito);
        }
    }//GEN-LAST:event_CampoContrasenaMousePressed

    private void CampoContrasenaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CampoContrasenaFocusGained
        // Obtiene contenido de campo
        String Contenido = this.CampoContrasena.getText();
        // Obtiene color de campo
        Color ColorActual = this.CampoContrasena.getForeground();
        // Color cuando no se ha escrito nada
        Color ColorNoEscrito = new Color(102, 102, 102);
        // Color cuando se va a escribir algo
        Color ColorEscribir = new Color(51, 51, 51);
        // Verifica contenido y color de campo son los predeterminados
        if(Contenido.equals("Contraseña") && 
                (ColorActual == ColorNoEscrito))
        {
            // Limpiamos contenido
            this.CampoContrasena.setText("");
            this.CampoContrasena.setForeground(ColorEscribir);
        }
        else
        {
            this.CampoContrasena.setForeground(ColorEscribir);
        }
    }//GEN-LAST:event_CampoContrasenaFocusGained

    private void CampoContrasenaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CampoContrasenaFocusLost
        // Obtiene contenido de campo
        String Contenido = this.CampoContrasena.getText();
        // Obtiene color de campo
        Color ColorActual = this.CampoContrasena.getForeground();
        // Color cuando no se ha escrito nada
        Color ColorNoEscrito = new Color(102, 102, 102);
        // Color cuando se va a escribir algo
        Color ColorEscribir = new Color(51, 51, 51);
        // Verifica contenido y color de campo son los predeterminados
        if(!Contenido.equals("Contraseña"))
        {  
            if(Contenido.equals(""))
            {
                this.CampoContrasena.setText("Contraseña");
                if(ColorActual != ColorNoEscrito)
                {
                    this.CampoContrasena.setForeground(ColorNoEscrito);
                }
            }
        }
        CampoContrasenaCubrirContrasena();
    }//GEN-LAST:event_CampoContrasenaFocusLost

    // Método para cubrir contraseña
    private void CampoContrasenaCubrirContrasena()
    {
        // Obtiene contenido actual de Contraseña
        String Contenido = this.CampoContrasena.getText();
        String ContenidoReemplazar;
        ContenidoReemplazar = "";      
        // Contador
        int x;
        for(x = 0; x < Contenido.length(); x++)
        {
            ContenidoReemplazar += "•";
        }
        if(!Contenido.equals("Contraseña"))
        {
            this.CampoContrasena.setText(ContenidoReemplazar);
        }
    }
    
    private void CampoContrasenaCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_CampoContrasenaCaretUpdate
        
    }//GEN-LAST:event_CampoContrasenaCaretUpdate

    private void CampoContrasenaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CampoContrasenaKeyTyped
        // Obtiene contenido actual de Contraseña
        String Contenido = this.CampoContrasena.getText();
        String ContenidoReemplazar;
        ContenidoReemplazar = "";
        if(Contenido.equals(""))
        {
            ContrasenaTemp = "";
        }
        if(evt.getKeyChar() >= ' ' && evt.getKeyChar() <= '■')
        {
            ContrasenaTemp += evt.getKeyChar();
        }
        else
        {
            if(evt.getKeyChar() == '\b')
            {
                ContrasenaTemp = ContrasenaTemp.substring(0, ContrasenaTemp.length() - 1);
            }
        }
        
        // Contador
        int x;
        for(x = 0; x < Contenido.length(); x++)
        {
            ContenidoReemplazar += "•";
        }
        if(!Contenido.equals("Contraseña"))
        {
            this.CampoContrasena.setText(ContenidoReemplazar);
        }
    }//GEN-LAST:event_CampoContrasenaKeyTyped

    // Método para cuando se quiere iniciar sesión
    private void BotonIniciarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonIniciarSesionActionPerformed
        // Verifica si los campos no están vacíos
        String Username, Password, HashContrasena;
        Usuario SesionActiva;
        int x, Posicion;
        Boolean Sesion;
        Posicion = -1;
        Sesion = false;
        Username = this.CampoUsuario.getText();
        Password = this.CampoContrasena.getText();
        HashContrasena = Hashing.Hash(ContrasenaTemp);
        if(Username.equals("Nombre de Usuario") || Username.equals(""))
        {
            JOptionPane.showMessageDialog(null, "Faltan campos por llenar");
        }
        else
        {
            if(Password.equals("Contraseña") || Password.equals(""))
            {
                JOptionPane.showMessageDialog(null, "Faltan campos por llenar");
            }
            else
            {
                for(x = 0; x < RegistrosVentana.getTamanoUsuarios(); x++)
                {
                    if(Username.equals(RegistrosVentana.getUsuario(x).getUsername()))
                    {
                        if(HashContrasena.equals(RegistrosVentana.getUsuario(x).getContrasena()))
                        {
                            Sesion = true;
                            Posicion = x;
                        }
                    }
                }
                if(Sesion)
                {
                    System.out.println("Iniciando Sesión como " + Username);
                    SesionActiva = RegistrosVentana.getUsuario(Posicion);
                    Cargando CargandoVentana = new Cargando(this, true, 
                            TamanoVentana, RegistrosVentana, SesionActiva);
                    CargandoVentana.pack();
                    CargandoVentana.setLocationRelativeTo(null);
                    CargandoVentana.setVisible(true);
                    Menu MenuVentana = new Menu(TamanoVentana, RegistrosVentana, SesionActiva);
                    MenuVentana.setVisible(true);
                    dispose();
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Nombre de Usuario y/o contraseña erróneos");
                }
            }
        }
    }//GEN-LAST:event_BotonIniciarSesionActionPerformed

    // Argumentos a pasar a main de dicha clase
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Ventana TamanoVentana;
                Registro Registros;
                Registros = new Registro();
                TamanoVentana = new Ventana();
                new Login(TamanoVentana, Registros).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonCerrar;
    private javax.swing.JButton BotonCrearCuenta;
    private javax.swing.JButton BotonInfo;
    private javax.swing.JButton BotonIniciarSesion;
    private javax.swing.JButton BotonMaximizar;
    private javax.swing.JButton BotonMinimizar;
    private javax.swing.JButton BotonMostrarContrasena;
    private javax.swing.JButton BotonReestablecer;
    private javax.swing.JButton BotonReestablecerContrasena;
    private javax.swing.JTextField CampoContrasena;
    private javax.swing.JTextField CampoUsuario;
    private javax.swing.JLabel ImagenContrasena;
    private javax.swing.JLabel ImagenLogo;
    private javax.swing.JLabel ImagenUsername;
    private javax.swing.JLabel ImagenUsuario;
    private javax.swing.JPanel PanelFondo;
    private javax.swing.JSeparator SeparadorContrasena;
    private javax.swing.JSeparator SeparadorUsuario;
    // End of variables declaration//GEN-END:variables
}
